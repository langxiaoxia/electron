From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xiaoxia Lang <xxlang@grandstream.cn>
Date: Mon, 26 Dec 2022 10:23:02 +0800
Subject: fix: gs bug 242868.

It displays black wave window in sharing selection window after specific operation.

diff --git a/modules/desktop_capture/mac/window_list_utils.cc b/modules/desktop_capture/mac/window_list_utils.cc
index ebaa0f7b579be3f0c8ac065b8ddc3611591f5dc8..7fbf1b32205cb5bdd85fe3eda13500ce14197763 100644
--- a/modules/desktop_capture/mac/window_list_utils.cc
+++ b/modules/desktop_capture/mac/window_list_utils.cc
@@ -22,6 +22,7 @@
 #include <utility>
 
 #include "rtc_base/checks.h"
+#include "rtc_base/logging.h"
 
 static_assert(static_cast<webrtc::WindowId>(kCGNullWindowID) ==
                   webrtc::kNullWindowId,
@@ -198,6 +199,7 @@ bool GetWindowList(DesktopCapturer::SourceList* windows,
             // the check in the map. Also skip the window if owner name is
             // empty too.
             if (!owner_name.empty() && (itr == pid_itr_map.end())) {
+              RTC_LOG(LS_INFO) << "GetWindowList: Add window_id=" << window_id << ", owner_pid=" << pid << ", owner_name=" << owner_name;
               sources.push_back(DesktopCapturer::Source{window_id, owner_name});
               RTC_DCHECK(!sources.empty());
               // Get an iterator on the last valid element in the source list.
@@ -207,16 +209,29 @@ bool GetWindowList(DesktopCapturer::SourceList* windows,
                   std::pair<int,
                             std::list<DesktopCapturer::Source>::const_iterator>(
                       pid, last_source));
+            } else {
+              RTC_LOG(LS_INFO) << "GetWindowList: Skip window_id=" << window_id << ", owner_pid=" << pid << ", owner_name=" << owner_name;
             }
           } else {
+            RTC_LOG(LS_INFO) << "GetWindowList: Add window_id=" << window_id << ", owner_pid=" << pid << ", title=" << title;
             sources.push_back(DesktopCapturer::Source{window_id, title});
             // Once the window with empty title has been removed no other empty
             // windows are allowed for the same pid.
             if (itr != pid_itr_map.end() && (itr->second != sources.end())) {
+              RTC_LOG(LS_INFO) << "GetWindowList: Remove window_id=" << itr->second->id << ", owner_pid=" << itr->first << ", owner_name=" << itr->second->title;
               sources.erase(itr->second);
               // sdt::list::end() never changes during the lifetime of that
               // list.
               itr->second = sources.end();
+            } else if (itr == pid_itr_map.end()) {
+              // Once the window with title has been added no other empty
+              // windows are allowed for the same pid.
+              // std::list::end() never changes during the lifetime of that
+              // list.
+              pid_itr_map.insert(
+                  std::pair<int,
+                            std::list<DesktopCapturer::Source>::const_iterator>(
+                      pid, sources.end()));
             }
           }
         }
