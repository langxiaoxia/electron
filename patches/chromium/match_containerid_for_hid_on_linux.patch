From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xiaoxia Lang <xxlang@grandstream.cn>
Date: Fri, 8 Apr 2022 07:56:05 +0800
Subject: match_containerid_for_hid_on_linux


diff --git a/media/audio/pulse/audio_manager_pulse.cc b/media/audio/pulse/audio_manager_pulse.cc
index fbc41207b5c50be6603cadb0e10f9f7522582e36..f3face01b36c9725fe5ea97fdddcec0fdd561825 100644
--- a/media/audio/pulse/audio_manager_pulse.cc
+++ b/media/audio/pulse/audio_manager_pulse.cc
@@ -12,6 +12,8 @@
 #include "base/logging.h"
 #include "base/nix/xdg_util.h"
 #include "base/stl_util.h"
+#include "base/strings/string_split.h"
+#include "base/strings/stringprintf.h"
 #include "build/chromeos_buildflags.h"
 #include "media/audio/audio_device_description.h"
 #include "media/audio/pulse/pulse_input.h"
@@ -301,7 +303,10 @@ void AudioManagerPulse::InputDevicesInfoCallback(pa_context* context,
       return;
   }
 
-  manager->devices_->push_back(AudioDeviceName(info->description, info->name, std::string()));
+  std::string container_id = GetContainerId(info->proplist); //+by xxlang@2022-04-06
+
+  DVLOG(0) << "unique_id=" << info->name << ", device_name=" << info->description << ", container_id=" << container_id;
+  manager->devices_->push_back(AudioDeviceName(info->description, info->name, container_id)); //+by xxlang@2022-04-06
 }
 
 void AudioManagerPulse::OutputDevicesInfoCallback(pa_context* context,
@@ -316,7 +321,10 @@ void AudioManagerPulse::OutputDevicesInfoCallback(pa_context* context,
     return;
   }
 
-  manager->devices_->push_back(AudioDeviceName(info->description, info->name, std::string()));
+  std::string container_id = GetContainerId(info->proplist); //+by xxlang@2022-04-06
+
+  DVLOG(0) << "unique_id=" << info->name << ", device_name=" << info->description << ", container_id=" << container_id;
+  manager->devices_->push_back(AudioDeviceName(info->description, info->name, container_id)); //+by xxlang@2022-04-06
 }
 
 void AudioManagerPulse::AudioHardwareInfoCallback(pa_context* context,
@@ -347,4 +355,31 @@ void AudioManagerPulse::DefaultSourceInfoCallback(pa_context* context,
       info->monitor_of_sink != PA_INVALID_INDEX;
 }
 
+//+by xxlang@2022-04-06 {
+std::string AudioManagerPulse::GetContainerId(const pa_proplist *proplist) {
+  if (!pa_proplist_contains(proplist, "sysfs.path")) {
+    return std::string();
+  }
+
+  // sysfs.path : "/devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2:1.0/sound/card1"
+  const char* sysfs_path = pa_proplist_gets(proplist, "sysfs.path");
+  if (!sysfs_path) {
+    return std::string();
+  }
+
+  const char* prefix = "/devices/";
+  if (strncmp(sysfs_path, prefix, strlen(prefix))) {
+    return std::string();
+  }
+
+  std::vector<std::string> parts = base::SplitString(sysfs_path + strlen(prefix), "/", base::KEEP_WHITESPACE, base::SPLIT_WANT_ALL);
+  if (parts.size() < 4) {
+    return std::string();
+  }
+
+  // syspath : "/sys/devices/pci0000:00/0000:00:14.0/usb1/1-2"
+  return base::StringPrintf("/sys/devices/%s/%s/%s/%s", parts[0].c_str(), parts[1].c_str(), parts[2].c_str(), parts[3].c_str());
+}
+//+by xxlang@2022-04-06 }
+
 }  // namespace media
diff --git a/media/audio/pulse/audio_manager_pulse.h b/media/audio/pulse/audio_manager_pulse.h
index 4e10d8816825e440363c5b9091aaa2df6c06bc27..443b2c455c6957620564758aecf333371499e3eb 100644
--- a/media/audio/pulse/audio_manager_pulse.h
+++ b/media/audio/pulse/audio_manager_pulse.h
@@ -100,6 +100,8 @@ class MEDIA_EXPORT AudioManagerPulse : public AudioManagerBase {
   // Updates |native_input_sample_rate_| and |native_channel_count_|.
   void UpdateNativeAudioHardwareInfo();
 
+  static std::string GetContainerId(const pa_proplist *proplist); //+by xxlang@2022-04-06
+
   pa_threaded_mainloop* input_mainloop_;
   pa_context* input_context_;
   AudioDeviceNames* devices_;
