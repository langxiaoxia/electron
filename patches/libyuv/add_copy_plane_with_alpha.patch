From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xiaoxia Lang <xxlang@grandstream.cn>
Date: Mon, 10 Oct 2022 12:30:02 +0800
Subject: add_copy_plane_with_alpha


diff --git a/include/libyuv/planar_functions.h b/include/libyuv/planar_functions.h
index def773cb446866fd0f5802460a6dbbaea0a6c201..863e7d0d04bbd56dc0b7513d2b4f121fac0f99c0 100644
--- a/include/libyuv/planar_functions.h
+++ b/include/libyuv/planar_functions.h
@@ -49,6 +49,15 @@ void CopyPlane(const uint8_t* src_y,
                int width,
                int height);
 
+//+by xxlang@2022-09-30 : share annotation
+LIBYUV_API
+void CopyPlaneWithAlpha(const uint8_t* src_y,
+               int src_stride_y,
+               uint8_t* dst_y,
+               int dst_stride_y,
+               int width,
+               int height);
+
 LIBYUV_API
 void CopyPlane_16(const uint16_t* src_y,
                   int src_stride_y,
diff --git a/include/libyuv/row.h b/include/libyuv/row.h
index 0e47bfbd927d51e255c9b5da80fea1e86c5a1ed5..9e1df81cf67f7058988a17e8a7d9afc251f9365f 100644
--- a/include/libyuv/row.h
+++ b/include/libyuv/row.h
@@ -2400,6 +2400,7 @@ void CopyRow_ERMS(const uint8_t* src, uint8_t* dst, int width);
 void CopyRow_NEON(const uint8_t* src, uint8_t* dst, int width);
 void CopyRow_MIPS(const uint8_t* src, uint8_t* dst, int count);
 void CopyRow_C(const uint8_t* src, uint8_t* dst, int count);
+void CopyRowWithAlpha_C(const uint8_t* src, uint8_t* dst, int count); //+by xxlang@2022-09-30 : share annotation
 void CopyRow_Any_SSE2(const uint8_t* src_ptr, uint8_t* dst_ptr, int width);
 void CopyRow_Any_AVX(const uint8_t* src_ptr, uint8_t* dst_ptr, int width);
 void CopyRow_Any_NEON(const uint8_t* src_ptr, uint8_t* dst_ptr, int width);
diff --git a/source/planar_functions.cc b/source/planar_functions.cc
index 3ff5dfa20711f9a6d47b0ea26420fd1de37bc499..990b21b287097b48c4557e2f7a9cf99184786d9e 100644
--- a/source/planar_functions.cc
+++ b/source/planar_functions.cc
@@ -81,6 +81,42 @@ void CopyPlane(const uint8_t* src_y,
   }
 }
 
+//+by xxlang@2022-09-30 : share annotation {
+LIBYUV_API
+void CopyPlaneWithAlpha(const uint8_t* src_y,
+               int src_stride_y,
+               uint8_t* dst_y,
+               int dst_stride_y,
+               int width,
+               int height) {
+  int y;
+  void (*CopyRow)(const uint8_t* src, uint8_t* dst, int width) = CopyRowWithAlpha_C;
+  // Negative height means invert the image.
+  if (height < 0) {
+    height = -height;
+    dst_y = dst_y + (height - 1) * dst_stride_y;
+    dst_stride_y = -dst_stride_y;
+  }
+  // Coalesce rows.
+  if (src_stride_y == width && dst_stride_y == width) {
+    width *= height;
+    height = 1;
+    src_stride_y = dst_stride_y = 0;
+  }
+  // Nothing to do.
+  if (src_y == dst_y && src_stride_y == dst_stride_y) {
+    return;
+  }
+
+  // Copy plane
+  for (y = 0; y < height; ++y) {
+    CopyRow(src_y, dst_y, width);
+    src_y += src_stride_y;
+    dst_y += dst_stride_y;
+  }
+}
+//+by xxlang@2022-09-30 : share annotation }
+
 // TODO(fbarchard): Consider support for negative height.
 // TODO(fbarchard): Consider stride measured in bytes.
 LIBYUV_API
diff --git a/source/row_common.cc b/source/row_common.cc
index 68446953d5e098eb5048df46a46bd6b253d0ebfc..d1949ea63850692e303b25dbe8871ece62c9708e 100644
--- a/source/row_common.cc
+++ b/source/row_common.cc
@@ -3236,6 +3236,26 @@ void CopyRow_C(const uint8_t* src, uint8_t* dst, int count) {
   memcpy(dst, src, count);
 }
 
+//+by xxlang@2022-09-30 : share annotation {
+void CopyRowWithAlpha_C(const uint8_t* src, uint8_t* dst, int count) {
+  int x;
+  for (x = 0; x < count / 4; ++x) {
+    uint8_t a = src[0];
+    uint8_t r = src[1];
+    uint8_t g = src[2];
+    uint8_t b = src[3];
+    if (a > 0) {
+      dst[0] = a;
+      dst[1] = r;
+      dst[2] = g;
+      dst[3] = b;
+    }
+    dst += 4;
+    src += 4;
+  }
+}
+//+by xxlang@2022-09-30 : share annotation }
+
 void CopyRow_16_C(const uint16_t* src, uint16_t* dst, int count) {
   memcpy(dst, src, count * 2);
 }
